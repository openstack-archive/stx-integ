From c0216e459c6410188bfcfabfd305a53f07b8b96b Mon Sep 17 00:00:00 2001
From: Giao Le <giao.le@windriver.com>
Date: Wed, 19 Oct 2016 15:06:17 -0400
Subject: [PATCH] check

---
 src/request.c | 45 ++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 44 insertions(+), 1 deletion(-)

diff --git a/src/request.c b/src/request.c
index 9338cbd..8b8efe7 100644
--- a/src/request.c
+++ b/src/request.c
@@ -6,10 +6,38 @@
 #include "sock_addr.h"
 
 #include <sys/stat.h>
-
+#include <sys/statvfs.h>
 #include <limits.h>
 #include <stdlib.h>
 #include <string.h>
+#include <errno.h>
+
+static size_t get_tempdirs_free_space(server *srv)
+{
+       int i;
+       int valid = 0;
+       size_t total = 0;
+       array *dirs = srv->srvconf.upload_tempdirs;
+
+       for (i = 0; i < (int)dirs->used; ++i) {
+               struct statvfs stat;
+               const char *name = ((data_string *)dirs->data[i])->value->ptr;
+               int ret = statvfs(name, &stat);
+
+               if (ret >= 0) {
+                       size_t df = (size_t)(stat.f_bsize * stat.f_bfree);
+                       total += df;
+                       valid = 1;
+               }
+               else {
+                       log_error_write(srv, __FILE__, __LINE__, "ssss",
+                                       "dir:", name,
+                                       "error:", strerror(errno));
+               }
+       }
+
+       return (valid) ? total : SSIZE_MAX;
+}
 
 static int request_check_hostname(buffer *host) {
 	enum { DOMAINLABEL, TOPLABEL } stage = TOPLABEL;
@@ -1307,6 +1335,21 @@ int http_request_parse(server *srv, connection *con) {
 			return 0;
 
 		}
+                /* content-length is larger than 64k */
+                if (con->request.content_length > 64*1024) {
+                        size_t disk_free = get_tempdirs_free_space(srv);
+                        if (con->request.content_length > disk_free) {
+                                con->http_status = 413;
+                                con->keep_alive = 0;
+
+                                log_error_write(srv, __FILE__, __LINE__, "ssosos",
+                                        "not enough free space in tempdirs:",
+                                        "length =", (off_t) con->request.content_length,
+                                        "free =", (off_t) disk_free,
+                                        "-> 413");
+                                return 0;
+                        }
+                }
 		break;
 	default:
 		break;
-- 
2.7.4

