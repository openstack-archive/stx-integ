From 8b830ee6b0abaae23ca437b0f37e640f9b64582a Mon Sep 17 00:00:00 2001
Message-Id: <8b830ee6b0abaae23ca437b0f37e640f9b64582a.1528231742.git.Jim.Somerville@windriver.com>
From: Jim Somerville <Jim.Somerville@windriver.com>
Date: Wed, 30 May 2018 13:06:58 -0400
Subject: [PATCH 1/1] fix compilation issues

Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
---
 drivers/base/dma-contiguous.c |  2 +-
 drivers/block/drbd/drbd_req.c | 12 ++++++++----
 include/linux/filter.h        |  4 ++++
 3 files changed, 13 insertions(+), 5 deletions(-)

diff --git a/drivers/base/dma-contiguous.c b/drivers/base/dma-contiguous.c
index a7d5bda..403101d 100644
--- a/drivers/base/dma-contiguous.c
+++ b/drivers/base/dma-contiguous.c
@@ -309,7 +309,7 @@ struct page *dma_alloc_from_contiguous(struct device *dev, size_t count,
 	if (align > CONFIG_CMA_ALIGNMENT)
 		align = CONFIG_CMA_ALIGNMENT;
 
-	pr_debug("%s(cma %p, count %d, align %d)\n", __func__, (void *)cma,
+	pr_debug("%s(cma %p, count %zu, align %d)\n", __func__, (void *)cma,
 		 count, align);
 
 	if (!count)
diff --git a/drivers/block/drbd/drbd_req.c b/drivers/block/drbd/drbd_req.c
index a6f13f7..89aa15a 100644
--- a/drivers/block/drbd/drbd_req.c
+++ b/drivers/block/drbd/drbd_req.c
@@ -38,13 +38,15 @@ static void _drbd_start_io_acct(struct drbd_conf *mdev, struct drbd_request *req
 {
 	const int rw = bio_data_dir(req->master_bio);
 	int cpu;
+	struct request_queue *q = container_of((void*)mdev, struct request_queue, queuedata);
+
 	cpu = part_stat_lock();
-	part_round_stats(cpu, &mdev->vdisk->part0);
+	part_round_stats(q, cpu, &mdev->vdisk->part0);
 	part_stat_inc(cpu, &mdev->vdisk->part0, ios[rw]);
 	part_stat_add(cpu, &mdev->vdisk->part0, sectors[rw], req->i.size >> 9);
 	(void) cpu; /* The macro invocations above want the cpu argument, I do not like
 		       the compiler warning about cpu only assigned but never used... */
-	part_inc_in_flight(&mdev->vdisk->part0, rw);
+	part_inc_in_flight(q, &mdev->vdisk->part0, rw);
 	part_stat_unlock();
 }
 
@@ -54,10 +56,12 @@ static void _drbd_end_io_acct(struct drbd_conf *mdev, struct drbd_request *req)
 	int rw = bio_data_dir(req->master_bio);
 	unsigned long duration = jiffies - req->start_time;
 	int cpu;
+        struct request_queue *q = container_of((void*)mdev, struct request_queue, queuedata);
+
 	cpu = part_stat_lock();
 	part_stat_add(cpu, &mdev->vdisk->part0, ticks[rw], duration);
-	part_round_stats(cpu, &mdev->vdisk->part0);
-	part_dec_in_flight(&mdev->vdisk->part0, rw);
+	part_round_stats(q, cpu, &mdev->vdisk->part0);
+	part_dec_in_flight(q, &mdev->vdisk->part0, rw);
 	part_stat_unlock();
 }
 
diff --git a/include/linux/filter.h b/include/linux/filter.h
index cddbb31..15ce55f 100644
--- a/include/linux/filter.h
+++ b/include/linux/filter.h
@@ -665,6 +665,10 @@ static inline bool bpf_jit_blinding_enabled(struct bpf_prog *prog)
 	return true;
 }
 #else
+struct bpf_prog * __weak trace_bpf_int_jit_compile(struct bpf_prog *prog);
+void __weak trace_bpf_jit_compile(struct bpf_prog *prog);
+void __weak trace_bpf_jit_free(struct bpf_prog *fp);
+
 static inline bool ebpf_jit_enabled(void)
 {
 	return false;
-- 
1.8.3.1

